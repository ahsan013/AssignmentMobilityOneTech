@model AssignmentMobilityOneTech.Models.Users
@{
    /**/

    Layout = null;
}

@using (Html.BeginForm("", "", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @id = "Id" } })

    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label" })
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.EmailAddress, new { @class = "control-label" })
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>
    </div>
    <div class="clearfix"></div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Password, new { @class = "control-label" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "Password" } })
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <div class='col-md-4'>
            @Html.LabelFor(model => model.LastLogin, new { @class = "control-label" })
            <div class='input-group date datetimepicker'>
                @Html.EditorFor(model => model.LastLogin, new { htmlAttributes = new { @class = "form-control", @id = "LastLogin" } })

                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                @Html.ValidationMessageFor(model => model.LastLogin)
            </div>

        </div>
        <div class='col-md-4'>
            @Html.LabelFor(model => model.CreateDate, new { @class = "control-label" })
            <div class='input-group date datetimepicker'>
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", @id = "CreateDate" } })

                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                @Html.ValidationMessageFor(model => model.CreateDate)
            </div>

        </div>
    </div>
    <div class="clearfix"></div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Suspended, new { @class = "control-label" })
            @Html.CheckBoxFor(model => model.Suspended, new {  @id = "Suspended" })
            @Html.ValidationMessageFor(model => model.Suspended)
        </div>

    </div> 
    <div class="clearfix"></div>
    <br />
    <div class="row">
        <div class="col-md-4">

            <input type="submit" value="Submit" class="btn btn-success" />
            <input type="reset" value="Reset" class="btn btn-warning" />
        </div>
    </div>
}
<script>
    jQuery(function () {
       // $.noConflict();
        $('.datetimepicker').datetimepicker({
            minDate: new Date()
            //setDate: new Date()
        });



    });

</script>